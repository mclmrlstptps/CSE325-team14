@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager Navigation
@inject AuthService AuthService

<PageTitle>RestaurantMS</PageTitle>

<div class="d-flex flex-column min-vh-100">
    <header>
        <nav class="navbar navbar-expand-lg navbar-light bg-light shadow-sm">
            <div class="container">
                <a class="navbar-brand" href="/">RestaurantMS</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav ms-auto">
                        @if (currentUser != null)
                        {
                            <li class="nav-item"><span class="nav-link">Hello, @currentUser.Name</span></li>
                            <li class="nav-item"><a class="nav-link" href="/welcome">Menu</a></li>
                            <li class="nav-item">
                                <button class="btn btn-link nav-link" @onclick="Logout">Logout</button>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item"><a class="nav-link" href="/login">Login</a></li>
                            <li class="nav-item"><a class="nav-link" href="/register">Register</a></li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <main class="flex-grow-1 p-4">
        @Body
    </main>

    <Footer />
</div>

@code {
    private ApplicationUser? currentUser;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            currentUser = await AuthService.GetCurrentUserAsync();
            StateHasChanged();
        }
    }

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/login", true);
    }
}
