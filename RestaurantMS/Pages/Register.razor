@page "/register"
@inject AuthService AuthService
@inject NavigationManager Navigation

<div class="auth-container">
    <div class="auth-card">
        <h2>Create an Account</h2>

        @if (!string.IsNullOrEmpty(message))
        {
            <div class="error-message">@message</div>
        }

        <EditForm Model="model" OnValidSubmit="HandleRegister">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <InputText @bind-Value="model.Name" class="form-control" placeholder=" " />
                <label class="form-label">Name</label>
            </div>

            <div class="form-group">
                <InputText @bind-Value="model.Email" type="email" class="form-control" placeholder=" " />
                <label class="form-label">Email</label>
            </div>

            <div class="form-group">
                <InputText @bind-Value="model.Password" type="password" class="form-control" placeholder=" " />
                <label class="form-label">Password</label>
            </div>

            <div class="form-group">
                <InputText @bind-Value="model.ConfirmPassword" type="password" class="form-control" placeholder=" " />
                <label class="form-label">Confirm Password</label>
            </div>

            <div class="form-group">
                <InputSelect @bind-Value="model.Role" class="form-control">
                    <option value="">Select Role</option>
                    <option value="Customer">Customer</option>
                    <option value="Employee">Employee</option>
                    <option value="Manager">Manager</option>
                </InputSelect>
                <label class="form-label">Role</label>
            </div>

            <button type="submit" class="btn btn-primary mt-3">Register</button>
        </EditForm>

        <div class="mt-3 text-center">
            Already have an account? <a href="/login">Login here</a>
        </div>
    </div>
</div>

@code {
    private RegisterModel model = new();
    private string message = string.Empty;

    private async Task HandleRegister()
    {
        message = string.Empty;

        if (string.IsNullOrWhiteSpace(model.Role))
        {
            message = "Please select a role.";
            return;
        }

        if (model.Password != model.ConfirmPassword)
        {
            message = "Passwords do not match.";
            return;
        }

        var newUser = new ApplicationUser
        {
            Name = model.Name,
            Email = model.Email,
            Role = model.Role
        };

        var success = await AuthService.RegisterAsync(newUser, model.Password);
        if (success)
        {
            Navigation.NavigateTo("/login", true);
        }
        else
        {
            message = "Registration failed. Email may already exist.";
        }
    }

    private class RegisterModel
    {
        public string Name { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
        public string ConfirmPassword { get; set; } = string.Empty;
        public string Role { get; set; } = string.Empty;
    }
}
