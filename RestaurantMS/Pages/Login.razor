@page "/login"
@inject AuthService AuthService
@inject NavigationManager Navigation

<div class="auth-container">
    <div class="auth-card">
        <h2>Login</h2>

        @if (!string.IsNullOrEmpty(message))
        {
            <div class="error-message">@message</div>
        }

        <EditForm Model="model" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <InputText @bind-Value="model.Email" type="email" class="form-control" placeholder=" " />
                <label class="form-label">Email</label>
            </div>

            <div class="form-group">
                <InputText @bind-Value="model.Password" type="password" class="form-control" placeholder=" " />
                <label class="form-label">Password</label>
            </div>

            <button type="submit" class="btn btn-primary mt-3">Login</button>
        </EditForm>

        <div class="mt-3 text-center">
            Don't have an account? <a href="/register">Register here</a>
        </div>
    </div>
</div>

@code {
    private LoginModel model = new();
    private string message = string.Empty;

    private async Task HandleLogin()
    {
        message = string.Empty;

        var success = await AuthService.LoginAsync(model.Email, model.Password);
        if (success)
        {
            Navigation.NavigateTo("/welcome", true);
        }
        else
        {
            message = "Invalid email or password.";
        }
    }

    private class LoginModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }
}
