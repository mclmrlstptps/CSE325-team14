@page "/checkout"
@using RestaurantMS.Models
@inject RestaurantMS.Services.CartService CartService
@inject RestaurantMS.Services.OrderService OrderService

<h3>Checkout</h3>

@if (Cart == null || Cart.Items.Count == 0)
{
    <p>Your cart is empty.</p>
}
else
{
    <EditForm Model="@CustomerInfo" OnValidSubmit="PlaceOrder">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label>Name:</label>
            <InputText @bind-Value="CustomerInfo.Name" placeholder="Name" />
        </div>

        <div>
            <label>Email:</label>
            <InputText @bind-Value="CustomerInfo.Email" placeholder="Email" />
        </div>

        <div>
            <label>Phone:</label>
            <InputText @bind-Value="CustomerInfo.Phone" placeholder="Phone" />
        </div>

        <p>Total: @Total.ToString("C")</p>
        <button type="submit">Place Order</button>
    </EditForm>
}

@code {
    private CustomerInfo CustomerInfo = new();
    private Cart? Cart;
    private decimal Total = 0;

    protected override async Task OnInitializedAsync()
    {
        // TODO: Replace with actual authenticated user ID
        string userId = "some-user-id";

        Cart = await CartService.GetCartByUserIdAsync(userId);
        if (Cart != null)
        {
            Total = Cart.Total;
        }
    }

    private async Task PlaceOrder()
    {
        if (Cart == null || Cart.Items.Count == 0)
            return;

        var order = new Order
        {
            Items = Cart.Items,
            Total = Total,
            CustomerName = CustomerInfo.Name,
            CustomerEmail = CustomerInfo.Email,
            CustomerPhone = CustomerInfo.Phone,
            Status = "Pending",
            CreatedAt = DateTime.UtcNow
        };

        await OrderService.CreateOrderAsync(order);

        // Clear the cart
        if (Cart.UserId != null)
        {
            await CartService.ClearCartAsync(Cart.UserId);
        }

        // Optional: Navigate to confirmation page
        // NavigationManager.NavigateTo("/order-confirmation");
    }
}
