@page "/register"
@using RestaurantMS.Models
@inject AuthService AuthService
@inject NavigationManager Navigation

<h3>Register</h3>

<EditForm Model="newUser" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Email:</label>
        <InputText @bind-Value="newUser.Email" type="email" />
    </div>

    <div>
        <label>Name:</label>
        <InputText @bind-Value="newUser.Name" />
    </div>

    <div>
        <label>Password:</label>
        <InputText @bind-Value="password" type="password" />
    </div>

    <div>
        <label>Role:</label>
        <InputSelect @bind-Value="role">
            <option value="Employee">Employee</option>
            <option value="Manager">Manager</option>
        </InputSelect>
    </div>

    <button type="submit">Register</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color:red">@errorMessage</p>
}

@code {
    private User newUser = new User();
    private string password = string.Empty;
    private string role = "Employee"; // default
    private string errorMessage = string.Empty;

    private async Task HandleRegister()
    {
        try
        {
            var result = await AuthService.RegisterAsync(
                newUser.Email,
                password,
                newUser.Name,
                role
            );

            if (result != null)
            {
                Navigation.NavigateTo("/login");
            }
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}
